<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAPcAAACNCAYAAABrNez0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABPJJREFUeF7t2wGOokoARdHelhtyO+7GzbgYPtgWolKAWPNn8jwnIZPYSoGpa2FP
        89MBkcQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQN
        ocQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQN
        ocQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQNocQN
        ocQNocQNocQNocT94NJdzqfueDh0Pz8/k+3QHY6n7ny5Pe3q0p0Ow8+O3fn2SN25O173s/bcPeMfutPD
        4xPn4+31/bi156w4H2/HcFw/yweXc3c69sd9Pcb7djgcu9PSwVxO3WF47uHUn+GS2vlvfa/zifvm0odw
        nVTjNkzMp8n5MOHaxr1//ErcJZKl+FeV4x62rbFc+g+Exw+n3/Pot8ljP33ks42Luxlx9y6nMhkP3fF0
        np1Ul34lOvar5/1n7eL+bPyZeCdhv7vgTpXjGsIc/l3fVzmm23HN1Tus6ONzZt4PcTcj7t2Xro3i/nj8
        2uTeEuOSyfltDO7+IbX+noyX+8/7FHczXx53mQgzq9+qFnG3GH/62vJYv9q+v8NHJbLrJ0QtpInJ1cK2
        oSsfQuJu5rvjLqvmriWuQdxNxr9P7rIafhx2r6zC5dDGS/TKvsdV+41zmX2NuJv56rhLDLvaahB3m/F/
        J/f4S6x9O3syd263c6hEt+tc5kIWdzNfHHdtcmz1adytxj90x0nYu3b1rHJFUQ9457mMl/KT90XczYh7
        9yR45/VLcX86/n1rcTk+qEZc/RpRC23NzPsi7mbE/faELN6J88+u3KdzWQH3XuJPLcVR+9nOc7Fy/1G+
        c/+1uFuNf3v9+F9qe/d3M+5neXv+EPGd+9/z1XGv/QZ42edxtxn/PrnH3z5/EHiJ9Kf8VdnLdvv5U8XN
        flte3qvNcT+//+Iuvjrufna9XhZu9nncbcZ/DPke+I59blo1y7k8fYCM57L1g6Wyn8p5vageq7iL7467
        d1+p1laKZw3i7n0+/msEe/e59Uqi7P/5ee+MOz53ZqWv7X+qfqziLr4+7nsk/bZwx9JluFvrj/xt+afj
        z61w031uDXxpf0+qq+aGcxn+Rr48p/bejVcBQ7yv/7033GTz+/q5YxV3Ie6rflLW7mQaJ2K/PUzm6USe
        fiedbOOqtDbhPhm/FmMZs9+2fA/edEleLI09eV9u23guk8eqd4Xd3L9ePO7j/ljtphhxF+KeGO68ut6D
        PE6g322YVK93a71O4pdtc9y/9o2/sNI+rIALJfW2XpIXa8+fP5enQFcCv95BNrePl3vbp8RdiJv/3+RD
        53cF3vaBwnvEzV/yeOUzfIWReFvihlDihlDihlDihlDihlDihlDihlDihlDihlDihlDihlDihlDihlDi
        hlDihlDihlDihlDihlDihlDihlDihlDihlDihlDihlDihlDihlDihlDihlDihlDihlDihlDihlDihlDi
        hlDihlDihlDihlDihlDihlDihlDihlDihlDihlDihlDihlDihlDihlDihlDihlDihlDihlDihlDihlDi
        hlDihlDihlDihlDihlDihkhd9x/2zOSCNkhCIwAAAABJRU5ErkJggg==
</value>
  </data>
</root>